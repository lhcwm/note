for语句：
　　作用：用来遍历可迭代对象的数据元素
　　（可迭代对象是指能依次获取数据元素的对象）
　　遍历：经历并只经历一遍
　　可迭代对象包括：
　　字符串　ｓｔｒ
　　列表　　元组　字典
　语法：
　　ｆｏｒ　变量列表　ｉｎ　可迭代对象：
　　　　语句１
　　ｅｌｓｅ：
　　　　语句２
说明：
　ｅｌｓｅ子句部分可以省略
　　当再循环语句内部用ｂｒｅａｋ终止循环时。ｅｌｓｅ子句部分不会执行

ｒａｎｇｅ函数：
　ｒａｎｇｅ（ｓｔｏｐ）用来生成０－ｓｔｏｐ区间内的整数，直到ｓｔｏｐ为止（不包含ｓｔｏｐ）
ｒａｎｇｅ（ｓｔａｒ，ｓｔｏｐ，ｓｔｅｐ），用来生成ｓｔａｒ－ｓｔｏｐ区间内的整数，直到ｓｔｏｐ为止，每个整数间隔ｓｔｅｐ
　作用：
　　用来创建一个生成一系列整数的可迭代对象（也叫整数序列生成器）
　说明：
　此函数调用后返回的对象是可迭代对象，可以用于ｆｏｒ语句中
　ｒａｎｇｅ（４，０）　　＃　空

　ｆｏｒ语句注意事项：
　ｆｏｒ　ｒａｎｇｅ的调用顺序见：
　　１，ｒａｎｇｅ只会运行一次，运行一次后不会反复调用
　　２，若ｒａｎｇｅ返回值为空，则ｆｏｒ的变量不会赋值


　　ｆｏｒ语句嵌套：
　　ｆｏｒ　x in 'abc':
         for y in '123':
             
continue 语句：
　１，作用：
　　用于循环语句当中，不再执行本次循环内ｃｏｎｔｉｎｕｅ之后的语句重新开始下一次循环
　　说明：在ｗｈｉｌｅ中执行此语句，将会直接跳到ｗｈｉｌｅ语句的真值表达式处，重新判断循环条件。
　２，在ｆｏｒ语句中执行此语句，将会从可迭代对象中取下一个元素绑定变量后在进行循环


循环小结：
　　ｗｈｉｌｅ语句
　　ｆｏｒ语句
　　　　　字符串ｓｔｒ
　　　　　　　　　range函数调用后返回的对象



容器：

列表ｌｉｓｔ
列表是一种容器，
是可以被改变的序列，(ID不变的情况下，可改变内容；字符串是内容变了，就会创建新的)
是由一系列的特定元素组成，元素与元素之间可能没有任何关系，但他们之间有先后顺序。
　　序列类型简介
　　字符串ｓｔｒ
　　列表ｌｉｓｔ
　　元组　ｔｕｐｌｅ
　　字节串　ｂｙｔｅｓ
　　字节数组

　l=[]  #l绑定空列表
　l=[1,2,3]
 l=['北京','上海','深圳']
　l=[1,'Two','哈哈'，'３．１１１１']
　l=[1,[3.1,4.2],5]

列表的构造函数：
ｌｉｓｔ（）　　等同于[]
ｌｉｓｔ（ｉｔｅｒａｂｌｅ）　用可迭代对象创建一个列表
　　示例：
　l=list()               l=[]
 l=list('hi')           l=['h','i']
　l=list(range(1,10,2))  l=[1,3,5,7,9]

列表的运算

　　算数运算：(等同于字符串运算)
　＋　　　＋＝　　　*      *=
　＋　　用于拼接列表
　＋＝　　ｘ　＋＝　可迭代对象
　＋＝运算符是用原可迭代对象的数据进行追加，原列表的ＩＤ不变
　　例子：
　　　x="abc" 　
   x+="123" 　　虽然都是Ｘ，但是ＩＤ变了

　　 x=['a','b','c']
   x+=[1,2,3]   ID不变，内容却变了

　*　生成重复的列表，用原变量绑定更新后的列表

　　比较运算
　　运算符：　<  <=  > >=  ==  !=
　　说明：列表的比较规则与字符串的比较规则相同
　　　　列表要求每两个元素能依次比较，否则会出现类型错误
　　　[1,'two'] > ['two',1]  #typeerror
   [1,'two'] > [2,200]  #ture

列表的　in/ not in 
判断一个值是否存在列表中，如果存在返回ｔｕｒｅ，否则返回ｆａｌｓｅ．．．






