Trainning-day04回顾
1、Python运算符
	+ - * / % ** //
2、标准输入函数 input()
	input("输入提示语")
3、占位符
	生成一定格式的字符串
	格式化字符串 % 参数值
	格式化字符串 % (参数值1，参数值2，...)
	%s  字符串
	%d  整数
	%f  浮点数(默认保留小数点后6位)
			%.2f  保留小数点后两位
4、关系运算符
	>  <  >=  <=  ==  !=
	返回的值都为布尔值(True/False)
5、if条件语句
	让程序根据条件，选择性的去执行某条或某些语句
	if 条件1:
		语句1
	elif 条件2:
		语句2
	... ...
	else:
		语句n
	注意：if elif else 后面必须加：
				elif 可以有，也可以没有
				else 最多只能有一个，也可以没有
6、if嵌套语句
	if 条件1:
		if 条件：
			pass
		else:
			pass
	else:
		pass
7、逻辑运算符
	and 两个 或者 是多个条件同时成立
	    条件1 and 条件2 and ... ...
	or  两个 或者 多个条件满足其中之一就成立
			条件1 or 条件2 or ... ...

Trainning-day05笔记
1、while循环
	1、作用
		根据一定的条件，重复执行一个语句或多个语句
		(打印100行hello world)
	2、语法
		while 真值表达式:
			语句1
			... ...
		else:
			语句2
			... ...
		注意：else字句可以省略
	3、执行顺序
		1、先执行真值表达式，测试布尔值为 Ture 或 False
		2、如果测试真值表达式的值为 True，则执行语句1，然后再返回到第一步进行重复真值测试
		3、如果测试真值表达式的值为 False，则执行else子句中的语句2，然后结束while循环
	4、练习
		1、输入任意一个数n，打印1 到 n 的所有整数
			请输入一个整数：5
			1
			2
			3
			4
			5
		2、修改上述练习
			1、输入n后打印 1~n之间的奇数
				请输入一个整数：5
				1
				3
				5
	5、break语句
		1、作用
			用于循环语句中，用来终止当前循环语句的执行
		2、说明
			1、break语句一旦执行，整个while循环结束
			2、break语句通常与if语句组合使用
		3、示例
			n = int(input("请输入一个数："))
			i = 1
			while i <= n:
				print(i)
				if i == 5:
					break
				i = i + 1
			2、练习
				计算 1 - 100 之间的和
				1 + 2 + 3 + ... + 100 = ?
	6、continue语句
		1、作用
			用于循环中(while,for),不再执行本次循环内continue之后的语句，重新开始下一次循环
		2、说明
			1、在while语句中执行continue语句，将会直接跳转到while语句后的真值表达式处重新判断循环条件
		3、示例
			在1 ~ n之间，
			打印除了3的倍数以外的数
			n = int(input("请输入一个数"))
			i = 1
			while i <= n:				
				if i % 3 == 0:
					i = i + 1
					continue
				print(i)
				i = i + 1
		4、练习
			打印10以内的偶数
			i = 1
			while i <= 10:
				if i % 2 == 1:
					i = i + 1
					continue
				print(i)
				i = i + 1
2、for循环
	在Python中，for循环实际上是把后面的序列中的元素依次赋值给前面的变量，每赋值一次就会执行一次语句块的内容，也就是循环一次。
	1、作用：
		for循环可以用来遍历序列或可迭代对象中的每一个元素
	2、可迭代对象包括：
		字符串 str
		(以下后面会讲到)
		列表 list
		元组 tuple
		字典 dict
		集合 set
		固定集合 frozenset
		迭代器
	3、语法
		for 变量 in 可迭代对象:
			语句块1
		else:
			语句块2
	4、注意
		1、else子句可以省略
		2、语句块1的执行次数与可迭代对象的元素个数有关
3、range()函数
	1、作用
		range()函数可创建一个整数列表
	2、用法
		range(start,stop,[,step])
		start  开始 
		stop   结束(不会包含stop)
		step	 步长(可以是负数，且可以省略)
	3、示例
		range(3)      # start=0 stop=3 step=1  0,1,2
		range(5)      # 0,1,2,3,4
		range(1,3)    # 1,2
		range(1,8,2)  # 1,3,5,7
		range(5,0,-1) # 5,4,3,2,1
		range(5,0,-2) # 5,3,1
		range(4,0)    # 空
练习
	1、字符串 str="hello world"
	   要求将字符串str中的每一个字母打印出来
	2、输入任意一个数n，打印1~n的所有整数
		请输入一个整数：5
		1
		2
		3
		4
		5
		n = int(input("请输入一个整数"))
		for i in range(1,n+1):
			print(i)
	3、输入任意一个数n，打印1~n的所有奇数
		n = int(input("请输入一个整数"))
		for i in range(1,n+1):
			if i % 2 == 1:
				print(i)
	4、给一个字符串 str="python"，依次将str的字母o之前的字母打印出来
		str= "python"
		for i in str:
			if i == "o":
				break
			print(i)
	5、写程序，任意输入一个字符串，打印这个字符串当中有多少个空格(用for循环完成)
	str = input("输入一个字符串：")
	sum = 0
	for i in str:
		if i == " ":
			sum = sum + 1
	print(sum)
	6、现有一个已经设定好登录名和密码的系统，现有一个用户忘记登录账号以及密码，次登录系统只有三次尝试机会，请编写一个用户登录系统，如果在3次之内，当用户输入账号密码更设定账号密码匹配，则登陆成功，否则登录失败，并且当你在输错的情况下提示还剩几次机会。
	name = "tarena"
	passwd = "123"
	i = 1
	while i <= 3:
		name1 = input("请输入您的用户名")
		passwd1 = input("请输入您的密码")
		i = i + 1

		if name == name1 and passwd == passwd1:
			print("你真的好牛逼")
			print("============")
			print("登录成功")
			break
		else:
			print("您还剩余 %d 次机会" % (4-i))
			t = 4 - i
		if t == 0:
			print("就知道瞎BB")
			break
	

