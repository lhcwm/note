总结:1,在无阻塞状态下,多线程程序和单线程程序执行效率几乎差不多,
      甚至还不如单线程效率,但是多进程运行相同内容却可以有明显的效率提升.

    2,Python线程的GIL问题(全局解释器锁)
      1,什么是GIL:由于Python解释器设计中加入了解释器锁,导致Python解释器同一时刻
        只能解释执行一个线程,大大降低了线程的执行效率
      2,导致后果:因为遇到阻塞时,线程会主动让出解释器去解释其他线程
                所以Python多线程在执行多阻塞,高延迟io时可以提升程序效率
                其他情况并不能对效率有所提升
      3,GIL问题建议:
        ①尽量使用进程完成无阻塞的并发行为
        ②不使用c作为解释器(Java,c#)
      

进程与线程的区别联系:
  1,区别联系:
    1,两者都是多任务编程方式,都能使用计算机多核资源
    2,进程的创建删除消耗的计算机资源比线程的多
    3,进程空间独立,数据互不干扰,有专门的通讯方法;线程使用全局变量通讯]
    4,一个进程可以有多个分之线程,两者之间有包含关系
    5,多个线程共享进程资源,在共享资源操作时往往需要同步互斥处理
    6,进程线程在系统中都有自己的特殊属性标志,如id,代码段,命令集等
  2,使用场景:
    1,任务场景:如果是相对独立的任务模块,可能使用多进程,
             如果是多个分支共同形成一个整体任务可能用多线程
    2,项目结构:多种编程语言实现不同任务模块,可能是多进程,或者
             前后端分离应该各自为一个进程
    3,难易程度:通讯难度,数据处理的复杂度来判断用进程间通讯还是同步互斥方法

要求:1,对进程线程怎么理解/说说进程线程的差异
    2,进程间通讯知道哪些,有什么特点
    3,什么是同步互斥,你什么情况下使用,怎么用
    4,给一个情形,说说用进程还是线程,为什么
    5,问一些概念,僵尸进程的处理,GIL问题,进程状态


网络通信模型:
  1,通信模型分类:
    1,循环服务器模型:循环接受客户端请求,处理请求,
                   同一时刻只能处理一个请求,处理完毕后在处理下一个
        优点:实现简单,占用资源少
        缺点:无法同时处理多个客户端请求
    
        适用情况:处理的任务可以很快完成,客户端无需长期占用服务端程序
                udp比tcp更适合循环.
    2,IO并发模型:
      利用IO多路复用等技术,同时处理多个客户端IO请求
      优点:资源消耗少,能同时高效处理多个IO行为
      缺点:只能处理并发产生的IO事件,无法处理CPU计算

      使用场景:HTTP请求,网络传输都是IO行为,可以充分利用IO多路复用

    3,多进程/线程网络并发模型
      每当一个客户端连接服务器,就创建一个新的进程/线程为该客户端服务,
      客户端退出时再销毁该进程/线程
      优点:能同时满足多个客户端长期占有资源需求,可以处理各种请求.
      缺点:资源消耗较大,

      适用情况:客户端同时连接量较少,需要处理的行为较复杂情况.

  2,多进程网络并发模型
    1,基于fork的并发模型
      1,创建监听套接字
      2,等待接受客户端请求
      3,客户端连接创建新的进程处理客户端请求
      4,原进程继续等待其他客户端连接
      5,如果客户端退出则销毁对应的进程


ftp文件服务器
  1,功能:①分为服务端和客户端,要求可以有多个客户服务端同时操作.
         ②客户端可以查看服务器文件库中有什么文件
         ③客户端可以从文件库中下载文件到本地.
         ④客户端可以上传一个本地文件到文件库.
         ⑤使用print在客户端打印命令输入提示,引导操作

  2,技术分析:
    用多进程网络并发模型
    子进程自动关闭
    使用tcp套接字
    获取文件列表  os.listdir()
    判断普通文件  os.path.isfile()

  3,结构设计:
    客户端:搭建连接
          引导提示函数
          主操作函数

    服务端:搭建连接
          多进程模型
          文件操作调用函数

    文件操作类:查看函数
             上传函数
             下载函数

   
   

  4,具体功能分析:
    搭建网络连接:连接成功进入子进程
    查看:客户端发送请求类型
        服务端接收请求,按类型调用文件操作函数
    下载
    上传


作业:1.完成文件服务器
     2,复习http协议和httpserver1.0
     3,复习mysql的基本语句和操作
     4,自己完成进程线程基础程序,fork  process thread