1,字符串的格式化表达式
　语法格式：
　格式化字符串　％　参数值
　或
　格式化字符串　％　（参数值１，参数值２...）
　说明：
　％右侧为参数值，当有多个参数值时，用（）括起来，参数间用，分隔
　％左侧为格式化字符串，中间的％开头的字符为占位符和类型码
　作用：生成一定格式的字符串

　占位符和类型码　　　　意义
　　％ｓ　　　　　字符串，使用ｓｔｒ（ｘ）函数转换
　　％ｒ　　　　　字符串，使用ｒｅｐｒ（ｘ）转换
　　％ｄ　　　　　整数，转为十进制整数
　　％ｃ　　　　　整数转为单个字符
　　％ｏ　　　　　整数转为八进制
　　％ｘ　　　　　整数转为十六进制整数（字符a-f小写）
　　％Ｘ　　　　　整数转为十六进制整数（字符Ａ-Ｆ大写）
　　％ｅ　　　　　指数型浮点数（ｅ小写）
　　％Ｅ　　　　　指数型浮点数（Ｅ大写）
　　％ｆ，％Ｆ　　浮点数十进制形式
　　％ｇ，％Ｇ　　十进制浮点数或指数浮点数自动转换
　　％％　　　　　等同于一个％字符
　
　占位符和类型吗之间的格式语法
　％[- + 0 宽度.精度]类型码
　　注：：[]里的内容可以省略不写
　　　　-  　　左对齐（默认为右对齐）
　　　　+  　　显示正号
　　　　0　　　左侧空白位置补零
　　宽度　　整个数据输出的宽度（字符数）
　　精度　　保留小数点后多少位（默认６位）
　　示例：
　　  '%10d'  %  123   #'       123'
    '%010d' %  123   #'0000000123'
    '%-10d' %  123   #'123       '
    '%+10d' %  123   #'      +123'

循环语句：
　　　　有规律的事重复做，叫循环
　　　两种循环：　　ｗｈｉｌｅ　　　　ｆｏｒ

　　　ｗｈｉｌｅ
　　作用：根据一定条件，重复执行一天语句或多条语句
　　　语法：
　　ｗｈｉｌｅ　　真值表达式：
　　　　　　语句１（此部分的语句可能会执行多次）
　　ｅｌｓｅ：
　　　语句２
　说明：
　１，选执行真值表达式，测试布尔值为ｔｕｒｅ　或ｆａｌｓｅ
　　２，如果测试值为ｔｕｒｅ，则执行语句１，然后再返回到第１步，重复执行测试
　　３，如果真值表达式测试值为ｆａｌｓｅ　则执行ｅｌｓｅ语句，然后结束此ｗｈｉｌｅ循环
　　　　　　如果没有ｅｌｓｅ，则直接结束ｗｈｉｌｅ语句
　　４，ｅｌｓｅ部分可以省略
　　
　　注意：
　１，要控制循环真值表达式的值来防止死循环
　２，通常用正真表达式内的循环变量来控制循环的条件
　３，通常在循环的语句内改变循环变量来控制循环的次数和变量的走向
　　
　嵌套：
　ｗｈｉｌｅ语句本身是语句，和其他语句一样，可以嵌套到任何复合语句中


　ｂｒｅａｋ语句：
　作用：用于循环语句当中，用来终止当前循环语句的执行
　说明：
　ｂｒｅａｋ　语句执行后，此循环语句ｂｒｅａｋ之后的语句将不再执行
　ｂｒｅａｋ　语句通常和ｉｆ语句组合使用
　ｂｒｅａｋ　终止循环后，循环语句的ｅｌｓｅ子句将不再执行
　ｂｒｅａｋ　语句只能终止当前循环语句的执行，如果有循环嵌套，不会跳出嵌套的外循环
　ｂｒｅａｋ　语句只能在循环语句（ｗｈｉｌｅ　　　ｆｏｒ）内部使用

死循环：
　是指循环条件一直成立的循环
　死循环通常用ｂｒｅａｋ语句来终止循环
　死循环的ｅｌｓｅ语句永远不会执行
　死循环经常用在循环次数难以确定的循环中

