装饰器:decorators(专业提高篇)
装饰器是一个函数,主要用来包装另一个函数或类
 作用:
 在不修改被装饰的函数的源代码,不改变被装饰函数的调用方法的情况下添加或修改函数的功能.

 语法:
  def 装饰器函数名(fn):
    语句块
    return 函数对象
  @装饰器函数名<换行>     # 后面不能放任何东西
  def 被装饰函数名(形参列表):
    语句块
 
 示例:
 def xx(fn):
    def ss():
        print('*****')    #在原函数之前添加的功能
        fn()              # 原函数执行位置
        print('######')   #在原函数之后添加功能
    return ss
@xx
def myfunc():
    print('函数myfunc被调用')
# myfunc=xx(myfunc)
myfunc()
myfunc()
myfunc()


装饰器应用:
 1,一个函数可以加装多个装饰器.
 2,可以在原函数前或后添加功能.
 3,包装顺序:先执行离函数近的装饰器,逐层往上装,
 执行顺序:1-2-3
  @...
  @3
  @2
  @1
 调用顺序:3-2-1


函数的文档字符串:
 函数内第一次未赋值给任何变量的字符串是此函数的文档字符串
 函数的文档字符串可以用>>>help(函数名)查看
语法:
 def 函数名(参数列表):
   '函数的文档字符串'
   语句块
 示例:
  def func(a,b,c=0):
     '''这是func函数的文档字符串
     参数:
        a : 代表xxx
        b : 代表yyy
        ...
     '''
     pass

说明:
  文档字符串通常用来说明本函数的功能,使用方法和形参列表
  函数的文档字符串绑定在函数的__doc__属性上
 
函数的 __doc__属性
  __doc__属性用于绑定函数的文档字符串

函数的__name__属性
  __name__属性用来记录函数名
  注:
  以双下划线开头,以双线划线结尾的标识符通常代表python 的特殊属性
  匿名函数的名字就是lambda

函数定义语句(def)的完整语法:
[@装饰器名1]
[@装饰器名2]
def 函数名([位置形参],[*元组形参],[命名关键字形参],[**字典关键字形参]):
    '文档字符串'
    语句块

L=[1,2,3]
def f(n=0,lst=[]):  缺省参数[]在def语句执行时就已经创建该列表,并一直被f函数绑定
    
#def f(n=0,lst=None):  #改善后
#    if lst is None:
#        lst=[]
    lst.append(n)
    print(lst)
f(4,L)
f(5,L)
f(100)
f(200)  #[100,200]

注:缺省参数尽量不要用可变的数据


模块:module
 模块是一个包含有一系列数据,函数,类等组成的程序组
 模块是一个文件,模块文件通常以.py结尾

 作用:
  1,让一些相关的数据,函数,类等有逻辑的组织在一起,是逻辑结构更加清晰
 2,模块中的数据,函数和类等可提供给其他模块或程序使用
 模块的分类:
  1,内置模块,在解析器的内部可以是直接使用(一般用C语言编写)0
  2,标准库模块,安装Python时已安装可直接使用
  3,第三方模块(通常为开源,需要自己安装)
    安装命令:
    $ pip3 install 模块名
  4,用户自己编写的模块(可以作为其他人的第三方模块)



模块的导入语句:
 import 语句
 语法:
  import 模块名1[as 模块新名1],模块名2[as 模块新名2]
 示例:
  import math
  import sys, os
  import tensorflow as tf
 作用:
  将某模块整体导入到当前模块中
 用法:
 模块名.属性名
 如:
  import math
  math.factorial(5)

dir(obj) 函数,返回模块中所有属性的字符串列表
help(obj) 函数,可以查看模块的相关文档字符串
 示例:
import math as m
r=int(input('输入半径'))
print('圆的面积为',m.pi*r**2)
s=int(input('输入面积'))
print('半径为',m.sqrt(s/m.pi))




from import语句
 语法:
 from 模块名 import 模块属性名1 [as 属性新名1],....
 作用:
  将某模块内的一个或多个属性导入到当前模块的作用域
 示例:
  from math import pi,sqrt
 print(pi/2)

from import *语句
  语法:
  from 模块名 import *
  作用:将某模块的所有属性导入到当前模块中
  示例:
  from math import *


dir函数:

 dir([对象]) 返回一个字符串列表
 参数说明:
  如果没有参数调用,则返回当前作用域内所有变量的列表
 如果给定一个对象作为参数,则返回这个对象0地所有变量的列表
 对于一个模块,返回这个模块的全部变量
 对于一个类,返回类对象所有的变量,并递归基类对象的所有变量
 对于其他对象返回所有变量,类变量和基类变量


数学模块:
 参见math.html

时间模块:
 文档见time.html
时间元组是一个9个整型元素组成的

系统模块:
参见 sys.html


